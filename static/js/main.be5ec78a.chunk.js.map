{"version":3,"sources":["Components/Nav.js","Images/rb-logo.webp","Components/Home.js","Components/Resume/ResumeForm.js","types/resumeActionTypes.js","actions/ResumeActions.js","Components/Resume/ResumeTemplate.js","Components/CreateResume.js","Components/ResumeTable.js","App.js","reportWebVitals.js","reducers/ResumeReducer.js","index.js"],"names":["Brand","Navbar","NavbarStyled","styled","BrandStyled","NavStyled","div","LinkStyled","Navigation","bg","to","activeClassName","style","textDecoration","Container","Home","InputLabelRequired","label","InputLabel","SubmitButtonStyled","Button","LinkButtonStyled","Error","ErrorMsg","p","ResumeForm","props","skillsOptions","currentSkills","resumeData","validFields","currentEducation","currentExperience","handleSkillsAdd","onCreateOption","handleSubmit","onChangeField","onChangeEducation","onAddEducation","onRemoveEducation","onChangeExperience","onAddExperience","onRemoveExperience","padding","Form","variant","onClick","Row","clear","Group","controlId","as","Col","md","Label","Control","value","name","type","placeholder","onChange","icon","faExclamationCircle","email","phone","address","objective","institution","degree","cgpa","passout","education","length","map","i","e","color","industry","yearofexp","role","tasks","experience","isMulti","options","skills","links","SAVE_NEW_RESUME","saveNewResume","data","ActionTypes","payload","Name","Heading","h3","SubHeading","h4","SubData","LineBreak","hr","RowStyled","ResumeTemplate","span","offset","wordWrap","backgroundColor","margin","join","eachEducation","eachExperience","ToastStyledError","Toast","ToastStyledSuccess","formInitialData","CreateResume","allResumes","useSelector","state","actionSelected","currentResume","disptach","useDispatch","useState","setResumeData","setCurrentSkills","setCurrentEducation","setCurrentExperience","setValidFields","resumeSuccess","setResumeSuccess","resumeError","setResumeError","viewType","setViewType","useEffect","skill","id","validateData","validated","validatedFields","Object","entries","forEach","key","Array","isArray","onClose","show","delay","autohide","Body","skillsReduced","reduce","acc","newSkill","push","preventDefault","stopPropagation","target","updatedData","index","updatedEducation","each","splice","updatedExperience","marginTop","float","changeTableLink","NoData","Actions","ButtonStyled","ResumeTable","setActionSelected","setCurrentResume","edit","setEdit","marginBottom","Table","striped","bordered","hover","resume","faEdit","onClickEdit","faEye","onClickView","App","Nav","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","resumeReducer","action","updatedResumes","found","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be5ec78a.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nconst { Brand } = Navbar;\n\nconst NavbarStyled = styled(Navbar)`\n  height: 80px;\n  justify-content: space-around;\n`;\n\nconst BrandStyled = styled(Brand)`\n  font-weight: 700;\n  font-size: 30px;\n  color: #00aaff !important;\n`;\n\nconst NavStyled = styled.div`\n  display: flex;\n`;\n\nconst LinkStyled = styled.div`\n  color: #00aaff;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nconst Navigation = () => {\n  return (\n    <>\n      <NavbarStyled bg=\"dark\">\n        <BrandStyled>RESUME BUILDER</BrandStyled>\n        <NavStyled>\n          <LinkStyled>\n            <NavLink\n              to=\"/\"\n              activeClassName=\"active\"\n              style={{ textDecoration: \"none\" }}\n            >\n              Home\n            </NavLink>\n          </LinkStyled>\n          <LinkStyled>\n            <NavLink\n              to=\"/new-resume\"\n              activeClassName=\"active\"\n              style={{ textDecoration: \"none\" }}\n            >\n              Create New\n            </NavLink>\n          </LinkStyled>\n          <LinkStyled>\n            <NavLink\n              to=\"/view-resume\"\n              activeClassName=\"active\"\n              style={{ textDecoration: \"none\" }}\n            >\n              View/Edit\n            </NavLink>\n          </LinkStyled>\n        </NavStyled>\n      </NavbarStyled>\n    </>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/rb-logo.eed4a18f.webp\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport bg from \"../Images/rb-logo.webp\";\n\nconst Container = styled.div`\n  height: 90vh;\n  width: 100%;\n  background: url(${bg}) center no-repeat;\n`;\n\nconst Home = () => {\n  return <Container />;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst InputLabelRequired = styled.label`\n  padding-right: 20px;\n  white-space: break-spaces;\n  display: inline-block;\n  color: #2a2d37;\n  size: 14px;\n  line-height: 19px;\n  font-weight: 400;\n  &:after {\n    color: #df2e2e;\n    font-size: 14px;\n    line-height: 1;\n    content: \"*\";\n    margin: 0 8px 0 8px;\n  }\n`;\n\nconst InputLabel = styled.label`\n  padding-right: 20px;\n  white-space: break-spaces;\n  display: inline-block;\n  color: #2a2d37;\n  size: 14px;\n  line-height: 19px;\n  font-weight: 400;\n`;\n\nconst SubmitButtonStyled = styled(Button)`\n  float: right;\n  margin: 25px;\n`;\n\nconst LinkButtonStyled = styled(Button)`\n  float: right;\n  text-decoration: none !important;\n  font-size: 13px;\n`;\n\nconst Error = styled.div`\n  margin-top: 5px;\n  color: red;\n  font-size: 14px;\n  display: flex;\n`;\n\nconst ErrorMsg = styled.p`\n  margin: -2px 0 0 5px;\n`;\n\nconst ResumeForm = (props) => {\n  const {\n    skillsOptions,\n    currentSkills,\n    resumeData,\n    validFields,\n    currentEducation,\n    currentExperience,\n    handleSkillsAdd,\n    onCreateOption,\n    handleSubmit,\n    onChangeField,\n    onChangeEducation,\n    onAddEducation,\n    onRemoveEducation,\n    onChangeExperience,\n    onAddExperience,\n    onRemoveExperience,\n  } = props;\n\n  return (\n    <div style={{ padding: \"50px\" }}>\n      <Form>\n        <SubmitButtonStyled variant=\"primary\" onClick={handleSubmit}>\n          SAVE RESUME\n        </SubmitButtonStyled>\n        <Form.Row style={{ clear: \"both\" }}>\n          <Form.Group controlId=\"name\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Name</InputLabelRequired>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.name || \"\"}\n              type=\"text\"\n              placeholder=\"Enter Full Name\"\n              onChange={onChangeField}\n            />\n            {!validFields.name && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter your name</ErrorMsg>\n              </Error>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"email\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Email</InputLabelRequired>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.email || \"\"}\n              type=\"email\"\n              placeholder=\"Enter Email id\"\n              onChange={onChangeField}\n            />\n            {!validFields.email && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter your email id</ErrorMsg>\n              </Error>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"phone\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Phone</InputLabelRequired>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.phone || \"\"}\n              type=\"text\"\n              placeholder=\"Enter Phone Number\"\n              onChange={onChangeField}\n            />\n            {!validFields.phone && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter your phone number</ErrorMsg>\n              </Error>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"address\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabel>Address</InputLabel>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.address || \"\"}\n              type=\"text\"\n              as=\"textarea\"\n              placeholder=\"Enter Address\"\n              onChange={onChangeField}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"objective\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabel>Objective</InputLabel>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.objective || \"\"}\n              type=\"text\"\n              as=\"textarea\"\n              placeholder=\"Enter Objective\"\n              onChange={onChangeField}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"education\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Education</InputLabelRequired>\n            </Form.Label>\n            <Form.Group controlId=\"institution\">\n              <Form.Control\n                value={currentEducation.institution || \"\"}\n                type=\"text\"\n                placeholder=\"Enter Institution/ College name\"\n                onChange={onChangeEducation}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"degree\">\n              <Form.Control\n                value={currentEducation.degree || \"\"}\n                type=\"text\"\n                placeholder=\"Enter degree enrolled\"\n                onChange={onChangeEducation}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"cgpa\">\n              <Form.Control\n                value={currentEducation.cgpa || \"\"}\n                type=\"text\"\n                placeholder=\"CGPA on the scale 10\"\n                onChange={onChangeEducation}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"passout\">\n              <Form.Control\n                value={currentEducation.passout || \"\"}\n                type=\"text\"\n                placeholder=\"Enter passout year\"\n                onChange={onChangeEducation}\n              />\n            </Form.Group>\n            {!validFields.education && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter all education details</ErrorMsg>\n              </Error>\n            )}\n            <LinkButtonStyled variant=\"link\" onClick={onAddEducation}>\n              Add Education\n            </LinkButtonStyled>\n            {resumeData.education && resumeData.education.length\n              ? resumeData.education.map((education, i) => (\n                  <div key={i}>\n                    <Form.Group controlId={`institution${i}`}>\n                      <Form.Control\n                        name=\"institution\"\n                        value={education.institution || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter Institution/ College name\"\n                        onChange={(e) => onChangeEducation(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`degree${i}`}>\n                      <Form.Control\n                        name=\"degree\"\n                        value={education.degree || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter degree enrolled\"\n                        onChange={(e) => onChangeEducation(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`cgpa${i}`}>\n                      <Form.Control\n                        name=\"cgpa\"\n                        value={education.cgpa || \"\"}\n                        type=\"text\"\n                        placeholder=\"CGPA on the scale 10\"\n                        onChange={(e) => onChangeEducation(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`passout${i}`}>\n                      <Form.Control\n                        name=\"passout\"\n                        value={education.passout || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter passout year\"\n                        onChange={() => onChangeEducation(i)}\n                      />\n                    </Form.Group>\n                    <LinkButtonStyled\n                      variant=\"link\"\n                      style={{ color: \"red\" }}\n                      onClick={(e) => onRemoveEducation(e, i)}\n                    >\n                      Remove Education\n                    </LinkButtonStyled>\n                  </div>\n                ))\n              : null}\n          </Form.Group>\n          <Form.Group controlId=\"experience\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Experience</InputLabelRequired>\n            </Form.Label>\n            <Form.Group controlId=\"industry\">\n              <Form.Control\n                value={currentExperience.industry || \"\"}\n                type=\"text\"\n                placeholder=\"Enter Industry/ Company name\"\n                onChange={onChangeExperience}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"yearofexp\">\n              <Form.Control\n                value={currentExperience.yearofexp || \"\"}\n                type=\"text\"\n                placeholder=\"Enter total years of experience\"\n                onChange={onChangeExperience}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"role\">\n              <Form.Control\n                value={currentExperience.role || \"\"}\n                type=\"text\"\n                placeholder=\"Enter your role on the industry\"\n                onChange={onChangeExperience}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"tasks\">\n              <Form.Control\n                value={currentExperience.tasks || \"\"}\n                type=\"text\"\n                as=\"textarea\"\n                placeholder=\"Enter day to day task on industry\"\n                onChange={onChangeExperience}\n              />\n            </Form.Group>\n            {!validFields.experience && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter all experience details</ErrorMsg>\n              </Error>\n            )}\n            <LinkButtonStyled variant=\"link\" onClick={onAddExperience}>\n              Add Experience\n            </LinkButtonStyled>\n            {resumeData.experience && resumeData.experience.length\n              ? resumeData.experience.map((experience, i) => (\n                  <div key={i}>\n                    <Form.Group controlId={`industry${i}`}>\n                      <Form.Control\n                        name=\"industry\"\n                        value={experience.industry || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter Industry/ Company name\"\n                        onChange={(e) => onChangeExperience(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`yearofexp${i}`}>\n                      <Form.Control\n                        name=\"yearofexp\"\n                        value={experience.yearofexp || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter total years of experience\"\n                        onChange={(e) => onChangeExperience(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`role${i}`}>\n                      <Form.Control\n                        name=\"role\"\n                        value={experience.role || \"\"}\n                        type=\"text\"\n                        placeholder=\"Enter your role on the industry\"\n                        onChange={(e) => onChangeExperience(e, i)}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId={`tasks${i}`}>\n                      <Form.Control\n                        name=\"tasks\"\n                        value={experience.tasks || \"\"}\n                        type=\"text\"\n                        as=\"textarea\"\n                        placeholder=\"Enter day to day task on industry\"\n                        onChange={(e) => onChangeExperience(e, i)}\n                      />\n                    </Form.Group>\n                    <LinkButtonStyled\n                      variant=\"link\"\n                      style={{ color: \"red\" }}\n                      onClick={onRemoveExperience}\n                    >\n                      Remove Experience\n                    </LinkButtonStyled>\n                  </div>\n                ))\n              : null}\n          </Form.Group>\n          <Form.Group controlId=\"skills\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabelRequired>Skills</InputLabelRequired>\n            </Form.Label>\n            <CreatableSelect\n              isMulti\n              value={currentSkills}\n              options={skillsOptions}\n              onChange={handleSkillsAdd}\n              onCreateOption={onCreateOption}\n            />\n            {!validFields.skills && (\n              <Error>\n                <FontAwesomeIcon icon={faExclamationCircle} />\n                <ErrorMsg>Please enter your skills</ErrorMsg>\n              </Error>\n            )}\n          </Form.Group>\n          <Form.Group controlId=\"links\" as={Col} md={12}>\n            <Form.Label>\n              <InputLabel>Project Links</InputLabel>\n            </Form.Label>\n            <Form.Control\n              value={resumeData.links || \"\"}\n              type=\"text\"\n              placeholder=\"Enter comma separated links to showcase your skills(eg: github, stackoverflow)\"\n              onChange={onChangeField}\n            />\n          </Form.Group>\n        </Form.Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default ResumeForm;\n","export const SAVE_NEW_RESUME = \"SAVE NEW RESUME\";\n","import * as ActionTypes from \"../types/resumeActionTypes\";\n\nexport const saveNewResume = (data) => {\n  return {\n    type: ActionTypes.SAVE_NEW_RESUME,\n    payload: data,\n  };\n};\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  clear: right;\n  margin: 10px;\n  border: 2px solid black;\n  padding: 20px;\n`;\n\nconst Name = styled.p`\n  margin: 0;\n  padding: 10px;\n  font-size: 35px;\n  font-weight: 700;\n  color: #ffffff;\n`;\n\nconst Heading = styled.h3`\n  color: #485e71;\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-align: right;\n`;\n\nconst SubHeading = styled.h4`\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nconst SubData = styled.div`\n  margin-top: 10px;\n`;\n\nconst LineBreak = styled.hr`\n  margin-top: 40px;\n  height: 2px;\n  border: 0;\n  box-shadow: inset 0 12px 12px -12px rgba(0, 0, 0.5);\n`;\n\nconst RowStyled = styled(Row)`\n  margin-bottom: 5px;\n`;\n\nconst ResumeTemplate = (props) => {\n  const { resumeData } = props || {};\n\n  const getSkills = () => {\n    const skills = resumeData.skills.join(\", \");\n    return skills;\n  };\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 4 }}>\n          Phone: {resumeData.phone} <br /> Email : {resumeData.email}\n        </Col>\n        <Col md={{ span: 2, offset: 6 }} style={{ wordWrap: \"break-word\" }}>\n          {resumeData.address}\n        </Col>\n      </Row>\n      <Row\n        style={{\n          backgroundColor: \"#485E71\",\n          margin: \"20px 0 20px 0\",\n        }}\n      >\n        <Col md={{ span: 12 }}>\n          <Name>{resumeData.name}</Name>\n        </Col>\n      </Row>\n      {resumeData.objective && (\n        <>\n          <Row>\n            <Col md={2}>\n              <Heading>Objective</Heading>\n            </Col>\n            <Col md={{ span: 9, offset: 1 }}>{resumeData.objective}</Col>\n          </Row>\n          <LineBreak />\n        </>\n      )}\n      <Row>\n        <Col md={2}>\n          <Heading>Skills</Heading>\n        </Col>\n        <Col md={{ span: 9, offset: 1 }}>{getSkills()}</Col>\n      </Row>\n      <LineBreak />\n      <Row>\n        <Col md={2}>\n          <Heading>Education</Heading>\n        </Col>\n        <Col md={{ span: 9, offset: 1 }}>\n          {resumeData.education && resumeData.education.length\n            ? resumeData.education.map((eachEducation, i) => (\n                <>\n                  <SubHeading>Education {i + 1}</SubHeading>\n                  <SubData>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Institution :</Col>\n                      <Col md={{ span: 9 }}>{eachEducation.institution}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Degree :</Col>\n                      <Col md={{ span: 9 }}>{eachEducation.degree}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>CGPA (on 10) :</Col>\n                      <Col md={{ span: 9 }}>{eachEducation.cgpa}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Year of Passout :</Col>\n                      <Col md={{ span: 9 }}>{eachEducation.passout}</Col>\n                    </RowStyled>\n                  </SubData>\n                </>\n              ))\n            : null}\n        </Col>\n      </Row>\n      <LineBreak />\n      <Row>\n        <Col md={2}>\n          <Heading>Experience</Heading>\n        </Col>\n        <Col md={{ span: 9, offset: 1 }}>\n          {resumeData.experience && resumeData.experience.length\n            ? resumeData.experience.map((eachExperience, i) => (\n                <>\n                  <SubHeading>Experience {i + 1}</SubHeading>\n                  <SubData>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Industry :</Col>\n                      <Col md={{ span: 9 }}>{eachExperience.industry}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Total Experience :</Col>\n                      <Col md={{ span: 9 }}>{eachExperience.yearofexp}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Role :</Col>\n                      <Col md={{ span: 9 }}>{eachExperience.role}</Col>\n                    </RowStyled>\n                    <RowStyled>\n                      <Col md={{ span: 3 }}>Tasks :</Col>\n                      <Col md={{ span: 9 }}>{eachExperience.tasks}</Col>\n                    </RowStyled>\n                  </SubData>\n                </>\n              ))\n            : null}\n        </Col>\n      </Row>\n      {resumeData.links && (\n        <>\n          <LineBreak />\n          <Row>\n            <Col md={2}>\n              <Heading>Project Links</Heading>\n            </Col>\n            <Col md={{ span: 9, offset: 1 }}>{resumeData.links}</Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ResumeTemplate;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ResumeForm from \"./Resume/ResumeForm\";\nimport { Row, Col, Button, Toast } from \"react-bootstrap\";\nimport { saveNewResume } from \"../actions/ResumeActions\";\nimport ResumeTemplate from \"./Resume/ResumeTemplate\";\nimport styled from \"styled-components\";\n\nconst ToastStyledError = styled(Toast)`\n  font-size: 20px;\n  position: absolute;\n  top: 10vh;\n  left: 50%;\n  height: 10vh;\n  background-color: #ff0000;\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst ToastStyledSuccess = styled(Toast)`\n  font-size: 20px;\n  position: absolute;\n  top: 10vh;\n  left: 50%;\n  height: 10vh;\n  background-color: green;\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst formInitialData = {\n  name: \"\",\n  email: \"\",\n  address: \"\",\n  phone: \"\",\n  objective: \"\",\n  education: [],\n  experience: [],\n  skills: [],\n  links: \"\",\n};\n\nconst skillsOptions = [\n  { value: \"python\", label: \"python\" },\n  { value: \"javaScript\", label: \"javaScript\" },\n  { value: \"C\", label: \"C\" },\n  { value: \"Java\", label: \"Java\" },\n];\n\nconst CreateResume = (props) => {\n  const allResumes = useSelector((state) => state.allResumes);\n  const { actionSelected, currentResume } = props || {};\n  const disptach = useDispatch();\n  const [resumeData, setResumeData] = useState(formInitialData);\n  const [currentSkills, setCurrentSkills] = useState([]);\n  const [currentEducation, setCurrentEducation] = useState({});\n  const [currentExperience, setCurrentExperience] = useState({});\n  const [validFields, setValidFields] = useState({\n    name: true,\n    email: true,\n    phone: true,\n    education: true,\n    experience: true,\n    skills: true,\n  });\n  const [resumeSuccess, setResumeSuccess] = useState(false);\n  const [resumeError, setResumeError] = useState(false);\n  const [viewType, setViewType] = useState(\"EDIT_VIEW\");\n\n  useEffect(() => {\n    if (actionSelected && actionSelected === \"EDIT\") {\n      // setResumeData({ ...formInitialData, education: [], experience: [] })\n      setResumeData(currentResume);\n      const skills = currentResume.skills.map((skill) => ({\n        value: skill,\n        label: skill,\n      }));\n      setCurrentSkills(skills);\n    } else {\n      setResumeData({\n        ...formInitialData,\n        education: [],\n        experience: [],\n        id: allResumes.length + 1,\n      });\n    }\n  }, [actionSelected, currentResume]);\n\n  const handleSkillsAdd = (skills) => {\n    setCurrentSkills(skills);\n    const skillsReduced = skills.reduce((acc, skill) => {\n      return [...acc, skill.label];\n    }, []);\n    setResumeData({ ...resumeData, skills: skillsReduced });\n    setValidFields({ ...validFields, skills: true });\n  };\n\n  const onCreateOption = (skill) => {\n    const newSkill = { value: skill, label: skill };\n    skillsOptions.push(newSkill);\n    setCurrentSkills([...currentSkills, newSkill]);\n    const { skills } = resumeData;\n    skills.push(skill);\n    setResumeData({ ...resumeData, skills });\n    setValidFields({ ...validFields, skills: true });\n  };\n\n  const validateData = () => {\n    let validated = false;\n    let validatedFields = {};\n    Object.entries(resumeData).forEach(([key, value]) => {\n      if (!value || (Array.isArray(value) && !value.length)) {\n        if (key !== \"objective\" && key !== \"address\" && key !== \"links\") {\n          validatedFields = { ...validatedFields, [key]: false };\n          validated = true;\n        }\n      }\n    });\n    return {\n      validated,\n      validatedFields,\n    };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { validated, validatedFields } = validateData();\n    if (!validated) {\n      disptach(saveNewResume(resumeData));\n      setResumeSuccess(true);\n      // if (!actionSelected) {\n      //   setResumeData({ ...formInitialData, education: [], experience: [] });\n      //   setCurrentExperience([]);\n      //   setCurrentEducation([]);\n      //   setCurrentSkills([]);\n      // }\n    } else {\n      setResumeError(true);\n      setValidFields({ ...validFields, ...validatedFields });\n    }\n  };\n\n  const onChangeField = (e) => {\n    e.preventDefault();\n    const { id, value } = e.target;\n    const updatedData = { ...resumeData, [id]: value };\n    setResumeData(updatedData);\n    setValidFields({ ...validFields, [id]: true });\n  };\n\n  const onChangeEducation = (e, index) => {\n    e.preventDefault();\n    const { id, value, name } = e.target;\n    if (index >= 0) {\n      const { education } = resumeData;\n      const updatedEducation = education.map((each, i) => {\n        if (i === index) {\n          return {\n            ...each,\n            [name]: value,\n          };\n        }\n        return each;\n      });\n      setResumeData({ ...resumeData, education: updatedEducation });\n      return;\n    }\n    setCurrentEducation({ ...currentEducation, [id]: value });\n    setValidFields({ ...validFields, education: true });\n  };\n\n  const onAddEducation = () => {\n    const { education } = resumeData;\n    if (\n      !currentEducation.institution ||\n      !currentEducation.degree ||\n      !currentEducation.cgpa ||\n      !currentEducation.passout\n    )\n      setValidFields({ ...validFields, education: false });\n    else {\n      education.push(currentEducation);\n      setResumeData({ ...resumeData, education });\n      setCurrentEducation({});\n    }\n  };\n\n  const onRemoveEducation = (index) => {\n    const { education } = resumeData;\n    education.splice(index, 1);\n    setResumeData({ ...resumeData, education });\n  };\n\n  const onChangeExperience = (e, index) => {\n    e.preventDefault();\n    const { id, value, name } = e.target;\n    if (index >= 0) {\n      const { experience } = resumeData;\n      const updatedExperience = experience.map((each, i) => {\n        if (i === index) {\n          return {\n            ...each,\n            [name]: value,\n          };\n        }\n        return each;\n      });\n      setResumeData({ ...resumeData, experience: updatedExperience });\n      return;\n    }\n    setCurrentExperience({ ...currentExperience, [id]: value });\n    setValidFields({ ...validFields, experience: true });\n  };\n\n  const onAddExperience = () => {\n    const { experience } = resumeData;\n    if (\n      !currentExperience.industry ||\n      !currentExperience.yearofexp ||\n      !currentExperience.role ||\n      !currentExperience.tasks\n    )\n      setValidFields({ ...validFields, experience: false });\n    else {\n      experience.push(currentExperience);\n      setResumeData({ ...resumeData, experience });\n      setCurrentExperience({});\n    }\n  };\n\n  const onRemoveExperience = (index) => {\n    const { experience } = resumeData;\n    experience.splice(index, 1);\n    setResumeData({ ...resumeData, experience });\n  };\n\n  const onClickView = () => {\n    const { validated, validatedFields } = validateData();\n    if (!validated) {\n      disptach(saveNewResume(resumeData));\n      setResumeSuccess(true);\n      setViewType(\"RESUME_VIEW\");\n      if (\n        props.changeTableLink &&\n        typeof props.changeTableLink === \"function\"\n      ) {\n        props.changeTableLink(true);\n      }\n    } else {\n      setValidFields({ ...validFields, ...validatedFields });\n      setResumeError(true);\n    }\n  };\n\n  const onClickEdit = () => {\n    if (props.changeTableLink && typeof props.changeTableLink === \"function\") {\n      props.changeTableLink(false);\n    }\n    setViewType(\"EDIT_VIEW\");\n  };\n\n  return (\n    <>\n      <ToastStyledError\n        onClose={() => setResumeError(false)}\n        show={resumeError}\n        delay={2000}\n        autohide\n      >\n        <Toast.Body style={{ padding: \"20px\" }}>\n          Fill all the fields in Resume\n        </Toast.Body>\n      </ToastStyledError>\n      <ToastStyledSuccess\n        onClose={() => setResumeSuccess(false)}\n        show={resumeSuccess}\n        delay={2000}\n        autohide\n      >\n        <Toast.Body style={{ padding: \"20px\" }}>\n          Resume Saved Successfully\n        </Toast.Body>\n      </ToastStyledSuccess>\n      {viewType === \"EDIT_VIEW\" && (\n        <Row>\n          <Col md={6}>\n            <ResumeForm\n              resumeData={resumeData}\n              currentSkills={currentSkills}\n              skillsOptions={skillsOptions}\n              currentEducation={currentEducation}\n              currentExperience={currentExperience}\n              validFields={validFields}\n              handleSkillsAdd={handleSkillsAdd}\n              onCreateOption={onCreateOption}\n              handleSubmit={handleSubmit}\n              onChangeField={onChangeField}\n              onChangeEducation={onChangeEducation}\n              onAddEducation={onAddEducation}\n              onRemoveEducation={onRemoveEducation}\n              onChangeExperience={onChangeExperience}\n              onAddExperience={onAddExperience}\n              onRemoveExperience={onRemoveExperience}\n            />\n          </Col>\n          <Col md={6} style={{ marginTop: \"60px\" }}>\n            <Button\n              variant=\"primary\"\n              style={{ float: \"right\", margin: \"20px\" }}\n              onClick={onClickView}\n            >\n              VIEW RESUME\n            </Button>\n            <ResumeTemplate resumeData={resumeData} />\n          </Col>\n        </Row>\n      )}\n      {viewType === \"RESUME_VIEW\" && (\n        <>\n          <Row>\n            <Col md={{ span: 4, offset: 8 }}>\n              <Button\n                variant=\"primary\"\n                style={{ float: \"right\", margin: \"20px\" }}\n                onClick={onClickEdit}\n                // onClick={() => setViewType(\"EDIT_VIEW\")}\n              >\n                EDIT RESUME\n              </Button>\n            </Col>\n          </Row>\n          <ResumeTemplate resumeData={resumeData} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CreateResume;\n","import React, { useState } from \"react\";\nimport { Table, Container, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CreateResume from \"../Components/CreateResume\";\nimport ResumeTemplate from \"../Components/Resume/ResumeTemplate\";\n\nconst NoData = styled.div`\n  height: 70vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  color: #00aaff;\n`;\n\nconst ButtonStyled = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n`;\n\nconst ResumeTable = () => {\n  const allResumes = useSelector((state) => state.allResumes);\n  const [actionSelected, setActionSelected] = useState(\"TABLE\");\n  const [currentResume, setCurrentResume] = useState({});\n  const [edit, setEdit] = useState(false);\n\n  const onClickEdit = (resume) => {\n    setCurrentResume(resume);\n    setActionSelected(\"EDIT\");\n  };\n\n  const onClickView = (resume) => {\n    setCurrentResume(resume);\n    setActionSelected(\"VIEW\");\n  };\n\n  const changeTableLink = (value) => {\n    setEdit(value);\n  };\n  return (\n    <>\n      {actionSelected === \"EDIT\" && (\n        <>\n          {!edit && (\n            <ButtonStyled style={{ marginBottom: \"-40px\" }}>\n              <Button variant=\"link\" onClick={() => setActionSelected(\"TABLE\")}>\n                Click to go to table view\n              </Button>\n            </ButtonStyled>\n          )}\n          <CreateResume\n            changeTableLink={changeTableLink}\n            currentResume={currentResume}\n            actionSelected={actionSelected}\n          />\n        </>\n      )}\n      {actionSelected === \"VIEW\" && (\n        <>\n          <ButtonStyled>\n            <Button variant=\"link\" onClick={() => setActionSelected(\"TABLE\")}>\n              Click to go to table view\n            </Button>\n          </ButtonStyled>\n          <ResumeTemplate\n            resumeData={currentResume}\n            actionSelected={actionSelected}\n          />\n        </>\n      )}\n      {actionSelected === \"TABLE\" && (\n        <Container style={{ marginTop: \"50px\" }}>\n          {allResumes && allResumes.length === 0 ? (\n            <NoData>No Resumes To Show</NoData>\n          ) : (\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Create On</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allResumes.map((resume) => (\n                  <tr key={resume.id}>\n                    <td>{resume.id}</td>\n                    <td>{resume.name}</td>\n                    <td>---</td>\n                    <td>\n                      <Actions>\n                        <FontAwesomeIcon\n                          icon={faEdit}\n                          onClick={() => onClickEdit(resume)}\n                        />\n                        <FontAwesomeIcon\n                          icon={faEye}\n                          onClick={() => onClickView(resume)}\n                        />\n                      </Actions>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default ResumeTable;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./Components/Nav\";\nimport Home from \"./Components/Home\";\nimport CreateResume from \"./Components/CreateResume\";\nimport ResumeTable from \"./Components/ResumeTable\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/new-resume\" component={CreateResume} />\n        <Route path=\"/view-resume\" component={ResumeTable} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SAVE_NEW_RESUME } from \"../types/resumeActionTypes\";\n\nconst initialState = {\n  allResumes: [],\n};\n\nconst resumeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SAVE_NEW_RESUME: {\n      const { allResumes } = state;\n      let updatedResumes = [];\n      let found = false;\n      updatedResumes = allResumes.map((resume) => {\n        if (resume.id === action.payload.id) {\n          found = true;\n          return action.payload;\n        }\n        return resume;\n      });\n      if (!found) {\n        updatedResumes.push(action.payload);\n      }\n      return {\n        ...state,\n        allResumes: updatedResumes,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default resumeReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore } from \"redux\";\nimport resume from \"./reducers/ResumeReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  resume,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}